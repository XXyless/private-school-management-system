/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author No_0n3
 */
public class addStudent extends javax.swing.JFrame {

    /**
     * Creates new form addStudent
     */
    int mainMode=0;
    Connect cn = new Connect();
    
    int mainId=0;
    int mainDeptId=0;
    public addStudent() {
        initComponents();
    }
    
    public addStudent(int id) throws SQLException{
        initComponents();
        Connection con=cn.ConnectDB();
        Statement statement = null;
        
        addButton.setText("UPDATE");
        mainMode = 1;
        mainId=id;
        
        try {
            statement = con.createStatement();
            ResultSet rs = statement.executeQuery("SELECT name,surname,password,city,district,detail,phone_number,department_name,student.department_id, total_price, method FROM student JOIN student_address ON student.student_id = student_address.student_id JOIN student_phone ON student_address.student_id = student_phone.student_id JOIN department ON student.department_id = department.department_id JOIN payment ON student.student_id = payment.student_id WHERE student.student_id = " + id);
            if(rs.next()){
                stdName.setText(rs.getString("name"));
                stdSurname.setText(rs.getString("surname"));
                stdPass.setText(rs.getString("password"));
                stdAddress.setText(rs.getString("detail"));
                stdCity.setText(rs.getString("city"));
                stdDistrict.setText(rs.getString("district"));
                stdFirstPhone.setText(rs.getString("phone_number"));
                mainDeptId = rs.getInt("student.department_id");
                stdDepartment.setSelectedIndex(mainDeptId-1);
                totalPrice.setText(rs.getString("total_price"));
                int cnt = rs.getInt("method");
                switch (cnt) {
                    case 1:
                        cnt=0;
                        break;
                    case 4:
                        cnt=1;
                        break;
                    case 8:
                        cnt=2;
                        break;
                    default:
                        cnt = 3;
                        break;
                }
                method.setSelectedIndex(cnt);
            }
            
        } catch (SQLException ex) {
                Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex);
            }
        cn.DisconnectDB(con);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField7 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        stdName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        stdSurname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        stdCity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        stdDepartment = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        stdFirstPhone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        stdPass = new javax.swing.JTextField();
        stdDistrict = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        totalPrice = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        method = new javax.swing.JComboBox<>();
        calc = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        totPrice = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        monPay = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stdAddress = new javax.swing.JTextArea();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Surname:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Password:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Department:");

        stdDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MF", "TM", "TS" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("City:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Phone Number:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("District:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Address:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Total Price:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Payment Method:");

        method.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "4", "8", "12" }));

        calc.setText("Calculate");
        calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcActionPerformed(evt);
            }
        });

        jLabel14.setText("Total Price:");

        jLabel15.setText("Monthly Payment:");

        stdAddress.setColumns(20);
        stdAddress.setLineWrap(true);
        stdAddress.setRows(5);
        jScrollPane1.setViewportView(stdAddress);

        addButton.setText("ADD");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(16, 16, 16))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(stdCity, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                .addComponent(stdSurname, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(stdName))
                            .addComponent(stdDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel6)
                            .addComponent(jLabel13)))
                    .addComponent(stdPass, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stdDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stdFirstPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totPrice)
                            .addComponent(monPay))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(calc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(method, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(totalPrice))
                        .addGap(67, 67, 67))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(stdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(stdFirstPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(stdSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(stdPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(stdDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(totalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(method, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stdCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(totPrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(monPay)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel10)))
                        .addGap(53, 53, 53)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stdDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calc))
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcActionPerformed
        // TODO add your handling code here:
        String prc=totalPrice.getText();
        if(prc.equals("")){
            JOptionPane.showMessageDialog(this, "ENTER VALUE");
        }else{
            int price = Integer.valueOf(this.totalPrice.getText());
            int installment =Integer.parseInt((String)method.getSelectedItem());
            int monPri = price/(int)installment;
            if(installment!=1){
                price = price * ((installment*2)+100)/100;
            }
            totPrice.setText(String.valueOf(price));
            monPay.setText(String.valueOf(monPri));
        }
    }//GEN-LAST:event_calcActionPerformed

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        // TODO add your handling code here:
        //name=
    }//GEN-LAST:event_addButtonMouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        Connection con=cn.ConnectDB();
        Statement statement = null;
        if(mainMode==1){
            
            System.out.println("Great");
            
            try {
                statement = con.createStatement();
                String query ="UPDATE student,department SET student.name = '" + (String) stdName.getText() + "', student.surname = '" + (String) stdSurname.getText() + "', student.password = '" + (String) stdPass.getText() +"', department.department_name = '" + stdDepartment.getSelectedItem() + "' WHERE student.student_id = " + mainId;
                statement.executeUpdate(query);
                if(stdCity.getText().equals("") && stdDistrict.getText().equals("") && stdAddress.getText().equals("")){
                    query = "DELETE FROM student_address WHERE student_id = "+mainId;
                    statement.executeUpdate(query);
                }else if(!stdCity.getText().equals("") && !stdDistrict.getText().equals("") && !stdAddress.getText().equals("")){
                    query = "UPDATE student_address SET student_address.city = '" + stdCity.getText() + "', student_address.district = '" + stdDistrict.getText() + "', student_address.detail = '" + stdAddress.getText() + "' WHERE student_id ="+mainId;
                    statement.executeUpdate(query);
                }else{
                    JOptionPane.showMessageDialog(this, "ERROR WHILE ADDRESS ADDING! PLEASE ENTER ADDRESS' ALL COMPONENTS!");
                }
                if(stdFirstPhone.getText().equals("")){
                    query = "DELETE FROM student_phone WHERE student_id = "+mainId;
                }else{
                    query = "UPDATE student_phone SET student_phone.phone_number = '" + stdFirstPhone.getText() + "' WHERE student_phone.student_id = " + mainId;
                }
                statement.executeUpdate(query);
                if(totalPrice.getText().equals("")){
                    JOptionPane.showMessageDialog(this, "TOTAL PRICE HAS NOT BEEN CHANGED! PLEASE FILL THAT AREA");
                }else{
                    query="UPDATE payment SET total_price = "+totalPrice.getText()+";";
                }
                statement.executeUpdate(query);
                statement=null;
                cn.DisconnectDB(con);
                this.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex);
            }
        } else{
            //Connect cn = new Connect();
            String name = stdName.getText();
            String surname = stdSurname.getText();
            String pword = stdPass.getText();
            String department = (String) stdDepartment.getSelectedItem();
            int depId=3;
            if(department.equals("MF")){
                depId=1;
            }
            else if(department.equals("TM")){
                depId=2;
            }
            String currentID = null;
            String city = (String) stdCity.getText();
            String district = (String) stdDistrict.getText();
            String address = (String) stdAddress.getText();
            String phone = (String) stdFirstPhone.getText();
            String installment = (String) method.getSelectedItem();
            int ins = Integer.parseInt((String)method.getSelectedItem());
            //System.out.println(ins);
            //String payment=null;
            String prc = totalPrice.getText();
            if(!prc.equals("")){
                int price =  Integer.valueOf(this.totalPrice.getText());
                if(ins!=1){
                    price = price * ((ins*2)+100)/100;
                }
                prc = Integer.toString(price);
                System.out.println(prc);
            }

            //int installment =Integer.parseInt((String)method.getSelectedItem());
            if(name.equals("") || surname.equals("") || pword.equals("") || prc.equals("") || phone.equals("")){
                JOptionPane.showMessageDialog(this, "Please Fill In All Important Fields!");
            }else{
                int c;
                if((city.equals("") && district.equals("") && address.equals(""))){
                    c=1;
                }
                else{
                    if((!city.equals("") && !district.equals("") && !address.equals(""))){
                        c=2;
                    }
                    else{
                        c=3;
                    }
                }
                System.out.println("***********************");
                System.out.println(c);
                System.out.println("***********************");
                if(c==3){
                    JOptionPane.showMessageDialog(this, "Please Enter Address' All Contents!");
                }
                else{
                    //Connect cn = new Connect();
                    statement = null;
                    String addStudentQuery = "INSERT INTO student (student_id, name, surname, password, department_id) VALUES (NULL, '"+name+"', '"+surname+"', '"+pword+"', "+depId+");";
                    System.out.println(addStudentQuery);
                    try {
                        statement = con.createStatement();
                        int rs = statement.executeUpdate(addStudentQuery);
                        System.out.println(rs);

                        cn.DisconnectDB(con);

                    } catch (SQLException ex) {
                        //System.out.println("dedede");
                        Logger.getLogger(Login_Screen.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    /*************FIND CURRENT ID*******************/
                    //cn = new Connect();
                    con=cn.ConnectDB();
                    statement = null;

                    String findCurrentIDQuery="SELECT MAX(student_id) FROM student;";
                    System.out.println(findCurrentIDQuery);

                    try {
                        statement = con.createStatement();
                        ResultSet rs = statement.executeQuery(findCurrentIDQuery);
                        while(rs.next()){
                            int id = rs.getInt("MAX(student_id)");
                            currentID=String.valueOf(id);
                            //System.out.println(currentID);
                        }
                        rs.close();
                        cn.DisconnectDB(con);
                    } catch (SQLException ex) {
                        //System.out.println("dsaklfja");
                        Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    /***************************************/

                    /**************ADD PHONE*******************/
                    //cn = new Connect();
                    con=cn.ConnectDB();
                    statement = null;
                    String addPhoneQuery="INSERT INTO student_phone (phone_number, student_id) VALUES ('"+phone+"', '"+currentID+"');";
                    System.out.println(addPhoneQuery);
                    try {
                        statement = con.createStatement();
                        int rs = statement.executeUpdate(addPhoneQuery);
                        cn.DisconnectDB(con);
                    } catch (SQLException ex) {
                        Logger.getLogger(Login_Screen.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    /*****************************************/
                    /**ADD ADDRESS*/
                    if(c==2){
                        if(currentID!=null){
                            String addAddresQuery="INSERT INTO student_address (city, district, detail, address_id, student_id) VALUES ('"+city+"', '"+district+"', '"+address+"', NULL, "+currentID+");";
                            System.out.println(addAddresQuery);
                            con=cn.ConnectDB();
                            statement=null;
                            try {
                                statement = con.createStatement();
                                int rs = statement.executeUpdate(addAddresQuery);
                                cn.DisconnectDB(con);
                            } catch (SQLException ex) {
                                Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "ERROR! ADDRESS ");
                        }
                    }
                    /******************/
                    /*ADD DEPT*/
                    String timeStamp = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
                    //System.out.println(timeStamp);
                    con=cn.ConnectDB();
                    statement=null;
                    //INSERT INTO `payment` (`total_price`, `method`, `paid`, `last_payment`, `last_payment_date`, `student_id`) VALUES ('6000', '1', '0', '0', '2019-05-10', '1010');
                    String addDept="INSERT INTO payment (total_price, method, paid, last_payment, last_payment_date, student_id) VALUES ("+prc+", "+installment+", 0, 0, '"+timeStamp+"',  "+currentID+");";
                    System.out.println(addDept);
                    try {
                        statement = con.createStatement();
                        statement.executeUpdate(addDept);
                        cn.DisconnectDB(con);
                        dispose();
                        /********/
                    } catch (SQLException ex) {
                        Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    /****************/

                }
            }
        } 
        
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new addStudent().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton calc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JComboBox<String> method;
    private javax.swing.JLabel monPay;
    private javax.swing.JTextArea stdAddress;
    private javax.swing.JTextField stdCity;
    private javax.swing.JComboBox<String> stdDepartment;
    private javax.swing.JTextField stdDistrict;
    private javax.swing.JTextField stdFirstPhone;
    private javax.swing.JTextField stdName;
    private javax.swing.JTextField stdPass;
    private javax.swing.JTextField stdSurname;
    private javax.swing.JLabel totPrice;
    private javax.swing.JTextField totalPrice;
    // End of variables declaration//GEN-END:variables
}
